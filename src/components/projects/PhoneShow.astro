---
const { images = [] } = Astro.props;
const total = images.length;
---

<div class="mockup-phone select-none min-w-[424px]">
  <div class="mockup-phone-camera"></div>
  <div class="mockup-phone-display">
    <div class="carousel w-full">
      {
        images.map((src: string, index: number) => {
          const prev = index === 0 ? total : index;
          const next = index + 2 > total ? 1 : index + 2;
          const slideId = `slide${index + 1}`;
          const prevId = `slide${prev}`;
          const nextId = `slide${next}`;
          return (
            <div id={slideId} class="carousel-item relative w-full">
              <img src={src} class="w-full" alt={`image ${index + 1}`} />
              <div class="absolute left-5 right-5 top-1/2 flex -translate-y-1/2 transform justify-between">
                <a href={`#${prevId}`} class="btn btn-circle">
                  ❮
                </a>
                <a href={`#${nextId}`} class="btn btn-circle">
                  ❯
                </a>
              </div>
            </div>
          );
        })
      }
    </div>
  </div>
</div>
<script>
  const carousel = document.querySelector('.carousel');
  const items = document.querySelectorAll('.carousel-item');

  // 手动播放
  document.querySelectorAll('.carousel a[href^="#slide"]').forEach((link) => {
    link.addEventListener('click', (e: any) => {
      e.preventDefault();
      const targetId = e.currentTarget.getAttribute('href')?.replace('#', '');
      const target = document.getElementById(targetId);
      if (target && carousel) {
        carousel.scrollTo({
          left: target.offsetLeft,
          behavior: 'smooth'
        });
      }
    });
  });

  // 自动轮播
  let current = 1;
  const total = items.length;
  setInterval(() => {
    current = (current % total) + 1;
    const target = document.getElementById(`slide${current}`);
    if (target && carousel) {
      carousel.scrollTo({
        left: target.offsetLeft,
        behavior: 'smooth'
      });
    }
  }, 3000);
</script>
